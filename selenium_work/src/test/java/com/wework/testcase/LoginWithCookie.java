package com.wework.testcase;// Generated by Selenium IDE

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.Cookie;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Set;
import java.util.StringTokenizer;

public class LoginWithCookie {
    static WebDriver driver;

    //获取cookies
    @BeforeAll
    public static void setUpGetCookies() {
        //设置复用浏览器
        ChromeOptions options = new ChromeOptions();
        options.setExperimentalOption("debuggerAddress", "127.0.0.1:9222");
        driver = new ChromeDriver(options);
        //对cookies遍历，将得到的cookie存放到文件中
        saveCookies(driver);
        System.out.println("cookies保存完成");
    }

    //使用cookies
    //@BeforeAll
    public static void setUpWithCookie() {
        //设置复用浏览器
        ChromeOptions options = new ChromeOptions();
        options.setExperimentalOption("debuggerAddress", "127.0.0.1:9222");
        driver = new ChromeDriver();
        driver.get("https://work.weixin.qq.com/wework_admin/loginpage_wx?from=myhome");
        //读取cookies，使用得到的cookies登陆
        getCookies();
        driver.get("https://work.weixin.qq.com/wework_admin/frame");
        try {
            Thread.sleep(5000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

    }

    private static void getCookies() {
        try {
            FileReader fileReader = new FileReader("cookies.txt");
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            String line;
            while ((line = bufferedReader.readLine()) != null) {
                //StringTokenizer 分词器
                StringTokenizer tokenizer = new StringTokenizer(line, ";");
                String name = tokenizer.nextToken();
                String value = tokenizer.nextToken();
                String path = tokenizer.nextToken();
                String domain = tokenizer.nextToken();
                Date expiry = null;
                String expiryStr = tokenizer.nextToken();
                if (!expiryStr.equals("null")) {
                    SimpleDateFormat sdf = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
                    expiry = sdf.parse(expiryStr);
                }
                boolean isSecure = Boolean.parseBoolean(tokenizer.nextToken());
                Cookie cookie = new Cookie(name, value, domain, path, expiry, isSecure);
                driver.manage().addCookie(cookie);
            }
            bufferedReader.close();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }


    private static void saveCookies(WebDriver driver) {
        Set<Cookie> cookies = driver.manage().getCookies();
        System.out.println(cookies);
        try {
            //写入文件
            FileWriter fileWriter = new FileWriter("cookies.txt");
            BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
            for (Cookie c : cookies) {
                bufferedWriter.write(c.getName() + ";" +
                        c.getValue() + ";" +
                        c.getPath() + ";" +
                        c.getDomain() + ";" +
                        c.getExpiry() + ";" +
                        c.isSecure());
                bufferedWriter.newLine();
            }
            bufferedWriter.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    @AfterAll
    public static void tearDown() {
        driver.quit();
    }

    @Test
    public void qiyeweixinlogin() {
        System.out.println("....");
    }
}
